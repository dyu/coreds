// Generated by fbsgen from p/ds/prk/pk

import { ds } from '../../'

export namespace pk {
    /**
     * ```
     * 
     * message PKK1 {
     *   required bytes p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.P1 l = 3;
     * }
     * ```
     */
    export interface PKK1 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.P1
    }
    export function PKK1$$new(p0: string, p1: string, l: ds.P1): PKK1 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKK4 {
     *   required bytes p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.P4 l = 3;
     * }
     * ```
     */
    export interface PKK4 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.P4
    }
    export function PKK4$$new(p0: string, p1: string, l: ds.P4): PKK4 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKK8 {
     *   required bytes p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.P8 l = 3;
     * }
     * ```
     */
    export interface PKK8 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.P8
    }
    export function PKK8$$new(p0: string, p1: string, l: ds.P8): PKK8 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKKD {
     *   required bytes p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.PD l = 3;
     * }
     * ```
     */
    export interface PKKD {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.PD
    }
    export function PKKD$$new(p0: string, p1: string, l: ds.PD): PKKD {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKKK {
     *   required bytes p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.PK l = 3;
     * }
     * ```
     */
    export interface PKKK {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.PK
    }
    export function PKKK$$new(p0: string, p1: string, l: ds.PK): PKKK {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKKS {
     *   required bytes p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.PS l = 3;
     * }
     * ```
     */
    export interface PKKS {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.PS
    }
    export function PKKS$$new(p0: string, p1: string, l: ds.PS): PKKS {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }


    /**
     * ```
     * 
     * message PK41 {
     *   required bytes p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.P1 l = 3;
     * }
     * ```
     */
    export interface PK41 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P1
    }
    export function PK41$$new(p0: string, p1: number, l: ds.P1): PK41 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK44 {
     *   required bytes p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.P4 l = 3;
     * }
     * ```
     */
    export interface PK44 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P4
    }
    export function PK44$$new(p0: string, p1: number, l: ds.P4): PK44 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK48 {
     *   required bytes p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.P8 l = 3;
     * }
     * ```
     */
    export interface PK48 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P8
    }
    export function PK48$$new(p0: string, p1: number, l: ds.P8): PK48 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK4D {
     *   required bytes p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.PD l = 3;
     * }
     * ```
     */
    export interface PK4D {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PD
    }
    export function PK4D$$new(p0: string, p1: number, l: ds.PD): PK4D {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK4K {
     *   required bytes p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.PK l = 3;
     * }
     * ```
     */
    export interface PK4K {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PK
    }
    export function PK4K$$new(p0: string, p1: number, l: ds.PK): PK4K {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK4S {
     *   required bytes p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.PS l = 3;
     * }
     * ```
     */
    export interface PK4S {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PS
    }
    export function PK4S$$new(p0: string, p1: number, l: ds.PS): PK4S {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }


    /**
     * ```
     * 
     * message PK1111 {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required int8 p3 = 4;
     *   required ds.P1 l = 5;
     * }
     * ```
     */
    export interface PK1111 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** p3 = 4, required */
        ['4']: number
        /** l = 5, required */
        ['5']: ds.P1
    }
    export function PK1111$$new(p0: string, p1: number, p2: number, p3: number, l: ds.P1): PK1111 {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': p3,
            '5': l
        }
    }

    /**
     * ```
     * 
     * message PK1114 {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required int8 p3 = 4;
     *   required ds.P4 l = 5;
     * }
     * ```
     */
    export interface PK1114 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** p3 = 4, required */
        ['4']: number
        /** l = 5, required */
        ['5']: ds.P4
    }
    export function PK1114$$new(p0: string, p1: number, p2: number, p3: number, l: ds.P4): PK1114 {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': p3,
            '5': l
        }
    }

    /**
     * ```
     * 
     * message PK1118 {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required int8 p3 = 4;
     *   required ds.P8 l = 5;
     * }
     * ```
     */
    export interface PK1118 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** p3 = 4, required */
        ['4']: number
        /** l = 5, required */
        ['5']: ds.P8
    }
    export function PK1118$$new(p0: string, p1: number, p2: number, p3: number, l: ds.P8): PK1118 {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': p3,
            '5': l
        }
    }

    /**
     * ```
     * 
     * message PK111D {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required int8 p3 = 4;
     *   required ds.PD l = 5;
     * }
     * ```
     */
    export interface PK111D {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** p3 = 4, required */
        ['4']: number
        /** l = 5, required */
        ['5']: ds.PD
    }
    export function PK111D$$new(p0: string, p1: number, p2: number, p3: number, l: ds.PD): PK111D {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': p3,
            '5': l
        }
    }

    /**
     * ```
     * 
     * message PK111K {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required int8 p3 = 4;
     *   required ds.PK l = 5;
     * }
     * ```
     */
    export interface PK111K {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** p3 = 4, required */
        ['4']: number
        /** l = 5, required */
        ['5']: ds.PK
    }
    export function PK111K$$new(p0: string, p1: number, p2: number, p3: number, l: ds.PK): PK111K {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': p3,
            '5': l
        }
    }

    /**
     * ```
     * 
     * message PK111S {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required int8 p3 = 4;
     *   required ds.PS l = 5;
     * }
     * ```
     */
    export interface PK111S {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** p3 = 4, required */
        ['4']: number
        /** l = 5, required */
        ['5']: ds.PS
    }
    export function PK111S$$new(p0: string, p1: number, p2: number, p3: number, l: ds.PS): PK111S {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': p3,
            '5': l
        }
    }


    /**
     * ```
     * 
     * message PK11 {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.P1 l = 3;
     * }
     * ```
     */
    export interface PK11 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P1
    }
    export function PK11$$new(p0: string, p1: number, l: ds.P1): PK11 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK14 {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.P4 l = 3;
     * }
     * ```
     */
    export interface PK14 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P4
    }
    export function PK14$$new(p0: string, p1: number, l: ds.P4): PK14 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK18 {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.P8 l = 3;
     * }
     * ```
     */
    export interface PK18 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P8
    }
    export function PK18$$new(p0: string, p1: number, l: ds.P8): PK18 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK1D {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.PD l = 3;
     * }
     * ```
     */
    export interface PK1D {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PD
    }
    export function PK1D$$new(p0: string, p1: number, l: ds.PD): PK1D {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK1K {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.PK l = 3;
     * }
     * ```
     */
    export interface PK1K {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PK
    }
    export function PK1K$$new(p0: string, p1: number, l: ds.PK): PK1K {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK1S {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.PS l = 3;
     * }
     * ```
     */
    export interface PK1S {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PS
    }
    export function PK1S$$new(p0: string, p1: number, l: ds.PS): PK1S {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }


    /**
     * ```
     * 
     * message PKS1 {
     *   required bytes p0 = 1;
     *   required string p1 = 2;
     *   required ds.P1 l = 3;
     * }
     * ```
     */
    export interface PKS1 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.P1
    }
    export function PKS1$$new(p0: string, p1: string, l: ds.P1): PKS1 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKS4 {
     *   required bytes p0 = 1;
     *   required string p1 = 2;
     *   required ds.P4 l = 3;
     * }
     * ```
     */
    export interface PKS4 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.P4
    }
    export function PKS4$$new(p0: string, p1: string, l: ds.P4): PKS4 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKS8 {
     *   required bytes p0 = 1;
     *   required string p1 = 2;
     *   required ds.P8 l = 3;
     * }
     * ```
     */
    export interface PKS8 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.P8
    }
    export function PKS8$$new(p0: string, p1: string, l: ds.P8): PKS8 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKSD {
     *   required bytes p0 = 1;
     *   required string p1 = 2;
     *   required ds.PD l = 3;
     * }
     * ```
     */
    export interface PKSD {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.PD
    }
    export function PKSD$$new(p0: string, p1: string, l: ds.PD): PKSD {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKSK {
     *   required bytes p0 = 1;
     *   required string p1 = 2;
     *   required ds.PK l = 3;
     * }
     * ```
     */
    export interface PKSK {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.PK
    }
    export function PKSK$$new(p0: string, p1: string, l: ds.PK): PKSK {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKSS {
     *   required bytes p0 = 1;
     *   required string p1 = 2;
     *   required ds.PS l = 3;
     * }
     * ```
     */
    export interface PKSS {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: string
        /** l = 3, required */
        ['3']: ds.PS
    }
    export function PKSS$$new(p0: string, p1: string, l: ds.PS): PKSS {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }


    /**
     * ```
     * 
     * message PKD1 {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P1 l = 3;
     * }
     * ```
     */
    export interface PKD1 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P1
    }
    export function PKD1$$new(p0: string, p1: number, l: ds.P1): PKD1 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKD4 {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P4 l = 3;
     * }
     * ```
     */
    export interface PKD4 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P4
    }
    export function PKD4$$new(p0: string, p1: number, l: ds.P4): PKD4 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKD8 {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P8 l = 3;
     * }
     * ```
     */
    export interface PKD8 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P8
    }
    export function PKD8$$new(p0: string, p1: number, l: ds.P8): PKD8 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKDD {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PD l = 3;
     * }
     * ```
     */
    export interface PKDD {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PD
    }
    export function PKDD$$new(p0: string, p1: number, l: ds.PD): PKDD {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKDK {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PK l = 3;
     * }
     * ```
     */
    export interface PKDK {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PK
    }
    export function PKDK$$new(p0: string, p1: number, l: ds.PK): PKDK {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PKDS {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PS l = 3;
     * }
     * ```
     */
    export interface PKDS {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PS
    }
    export function PKDS$$new(p0: string, p1: number, l: ds.PS): PKDS {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }


    /**
     * ```
     * 
     * message PK1 {
     *   required bytes p0 = 1;
     *   required ds.P1 l = 2;
     * }
     * ```
     */
    export interface PK1 {
        /** p0 = 1, required */
        ['1']: string
        /** l = 2, required */
        ['2']: ds.P1
    }
    export function PK1$$new(p0: string, l: ds.P1): PK1 {
        return {
            '1': p0,
            '2': l
        }
    }

    /**
     * ```
     * 
     * message PK4 {
     *   required bytes p0 = 1;
     *   required ds.P4 l = 2;
     * }
     * ```
     */
    export interface PK4 {
        /** p0 = 1, required */
        ['1']: string
        /** l = 2, required */
        ['2']: ds.P4
    }
    export function PK4$$new(p0: string, l: ds.P4): PK4 {
        return {
            '1': p0,
            '2': l
        }
    }

    /**
     * ```
     * 
     * message PK8 {
     *   required bytes p0 = 1;
     *   required ds.P8 l = 2;
     * }
     * ```
     */
    export interface PK8 {
        /** p0 = 1, required */
        ['1']: string
        /** l = 2, required */
        ['2']: ds.P8
    }
    export function PK8$$new(p0: string, l: ds.P8): PK8 {
        return {
            '1': p0,
            '2': l
        }
    }

    /**
     * ```
     * 
     * message PKD {
     *   required bytes p0 = 1;
     *   required ds.PD l = 2;
     * }
     * ```
     */
    export interface PKD {
        /** p0 = 1, required */
        ['1']: string
        /** l = 2, required */
        ['2']: ds.PD
    }
    export function PKD$$new(p0: string, l: ds.PD): PKD {
        return {
            '1': p0,
            '2': l
        }
    }

    /**
     * ```
     * 
     * message PKK {
     *   required bytes p0 = 1;
     *   required ds.PK l = 2;
     * }
     * ```
     */
    export interface PKK {
        /** p0 = 1, required */
        ['1']: string
        /** l = 2, required */
        ['2']: ds.PK
    }
    export function PKK$$new(p0: string, l: ds.PK): PKK {
        return {
            '1': p0,
            '2': l
        }
    }

    /**
     * ```
     * 
     * message PKS {
     *   required bytes p0 = 1;
     *   required ds.PS l = 2;
     * }
     * ```
     */
    export interface PKS {
        /** p0 = 1, required */
        ['1']: string
        /** l = 2, required */
        ['2']: ds.PS
    }
    export function PKS$$new(p0: string, l: ds.PS): PKS {
        return {
            '1': p0,
            '2': l
        }
    }


    /**
     * ```
     * 
     * message PK111 {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required ds.P1 l = 4;
     * }
     * ```
     */
    export interface PK111 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** l = 4, required */
        ['4']: ds.P1
    }
    export function PK111$$new(p0: string, p1: number, p2: number, l: ds.P1): PK111 {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': l
        }
    }

    /**
     * ```
     * 
     * message PK114 {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required ds.P4 l = 4;
     * }
     * ```
     */
    export interface PK114 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** l = 4, required */
        ['4']: ds.P4
    }
    export function PK114$$new(p0: string, p1: number, p2: number, l: ds.P4): PK114 {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': l
        }
    }

    /**
     * ```
     * 
     * message PK118 {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required ds.P8 l = 4;
     * }
     * ```
     */
    export interface PK118 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** l = 4, required */
        ['4']: ds.P8
    }
    export function PK118$$new(p0: string, p1: number, p2: number, l: ds.P8): PK118 {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': l
        }
    }

    /**
     * ```
     * 
     * message PK11D {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required ds.PD l = 4;
     * }
     * ```
     */
    export interface PK11D {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** l = 4, required */
        ['4']: ds.PD
    }
    export function PK11D$$new(p0: string, p1: number, p2: number, l: ds.PD): PK11D {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': l
        }
    }

    /**
     * ```
     * 
     * message PK11K {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required ds.PK l = 4;
     * }
     * ```
     */
    export interface PK11K {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** l = 4, required */
        ['4']: ds.PK
    }
    export function PK11K$$new(p0: string, p1: number, p2: number, l: ds.PK): PK11K {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': l
        }
    }

    /**
     * ```
     * 
     * message PK11S {
     *   required bytes p0 = 1;
     *   required int8 p1 = 2;
     *   required int8 p2 = 3;
     *   required ds.PS l = 4;
     * }
     * ```
     */
    export interface PK11S {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** p2 = 3, required */
        ['3']: number
        /** l = 4, required */
        ['4']: ds.PS
    }
    export function PK11S$$new(p0: string, p1: number, p2: number, l: ds.PS): PK11S {
        return {
            '1': p0,
            '2': p1,
            '3': p2,
            '4': l
        }
    }


    /**
     * ```
     * 
     * message PK81 {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P1 l = 3;
     * }
     * ```
     */
    export interface PK81 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P1
    }
    export function PK81$$new(p0: string, p1: number, l: ds.P1): PK81 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK84 {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P4 l = 3;
     * }
     * ```
     */
    export interface PK84 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P4
    }
    export function PK84$$new(p0: string, p1: number, l: ds.P4): PK84 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK88 {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P8 l = 3;
     * }
     * ```
     */
    export interface PK88 {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.P8
    }
    export function PK88$$new(p0: string, p1: number, l: ds.P8): PK88 {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK8D {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PD l = 3;
     * }
     * ```
     */
    export interface PK8D {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PD
    }
    export function PK8D$$new(p0: string, p1: number, l: ds.PD): PK8D {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK8K {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PK l = 3;
     * }
     * ```
     */
    export interface PK8K {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PK
    }
    export function PK8K$$new(p0: string, p1: number, l: ds.PK): PK8K {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }

    /**
     * ```
     * 
     * message PK8S {
     *   required bytes p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PS l = 3;
     * }
     * ```
     */
    export interface PK8S {
        /** p0 = 1, required */
        ['1']: string
        /** p1 = 2, required */
        ['2']: number
        /** l = 3, required */
        ['3']: ds.PS
    }
    export function PK8S$$new(p0: string, p1: number, l: ds.PS): PK8S {
        return {
            '1': p0,
            '2': p1,
            '3': l
        }
    }



}

